//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QFramework.TDE
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using System.Runtime.InteropServices;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    public class UIFunctionPanelData : QFramework.UIPanelData
    {
    }
    
    public partial class UIFunctionPanel : QFramework.UIPanel
    {
        
        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            throw new System.NotImplementedException ();
        }
        
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as UIFunctionPanelData ?? new UIFunctionPanelData();
            // please add init code here

            BtnsClickRegister();
            DocumentItem.Init();
        }

        void BtnsClickRegister()
        {
            CloseItemBtn.onClick.AddListener(() =>
            {
                CloseItem();
            });
            documentBtn.onClick.AddListener(() =>
            {
                CloseItem();
                Item = DocumentItem;
                ShowItem(documentBtn.transform.position);  
            });
            editorBtn.onClick.AddListener(() =>
            {
                CloseItem();
                Item = EditorItem;
                ShowItem(editorBtn.transform.position);
            });
            pelBtn.onClick.AddListener(() =>
            {
                CloseItem();
                Item = PelItem;
                ShowItem(pelBtn.transform.position);
            });
            canvasBtn.onClick.AddListener(() =>
            {
                CloseItem();
                Item = CanvasItem;
                ShowItem(canvasBtn.transform.position);
            });
            dataBtn.onClick.AddListener(() =>
            {
                CloseItem();
                Item = DataItem;
                ShowItem(dataBtn.transform.position);
            });
            viewBtn.onClick.AddListener(() =>
            {
                CloseItem();
                Item = ViewItem;
                ShowItem(viewBtn.transform.position);
            });
            helpBtn.onClick.AddListener(() =>
            {
                CloseItem();
                Item = HelpItem;
                ShowItem(helpBtn.transform.position);
            });
            questionBtn.onClick.AddListener(() =>
            {

            });
            minBtn.onClick.AddListener(() =>
            {

            });
            maxBtn.onClick.AddListener(() =>
            {

            });
            quitBtn.onClick.AddListener(() =>
            {
                Application.Quit();
            });
        }

        UIElement Item;
        Vector3 showPos;
        void CloseItem()
        {
            if (Item.IsNotNull())
            {
                CloseItemBtn.Hide();
                Item.gameObject.SetActive(false);
            }
        }

        void ShowItem(Vector3 pos)
        {
            if (Item.IsNotNull())
            {
                Item.transform.position = pos;
                CloseItemBtn.Show();
                Item.Show();
            }
        }


        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
        }
    }
    #region 外部系统

    [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Auto)]
    public class OpenFileName
    {
        public int structSize = 0;
        public IntPtr dlgOwner = IntPtr.Zero;
        public IntPtr instance = IntPtr.Zero;
        public String filter = null;
        public String customFilter = null;
        public int maxCustFilter = 0;
        public int filterIndex = 0;
        public String file = null;
        public int maxFile = 0;
        public String fileTitle = null;
        public int maxFileTitle = 0;
        public String initialDir = null;
        public String title = null;
        public int flags = 0;
        public short fileOffset = 0;
        public short fileExtension = 0;
        public String defExt = null;
        public IntPtr custData = IntPtr.Zero;
        public IntPtr hook = IntPtr.Zero;
        public String templateName = null;
        public IntPtr reservedPtr = IntPtr.Zero;
        public int reservedInt = 0;
        public int flagsEx = 0;
    }

    public class LocalDialog
    {
        ////链接指定系统函数       打开文件对话框
        //[DllImport("Comdlg32.dll", SetLastError = true, ThrowOnUnmappableChar = true, CharSet = CharSet.Auto)]
        //public static extern bool GetOpenFileName([@In, @Out] OpenFileName ofn);
        //public static bool GetOFN([@In, @Out] OpenFileName ofn)
        //{
        //    return GetOpenFileName(ofn);//执行打开文件的操作
        //}

        //链接指定系统函数        另存为对话框
        [DllImport("Comdlg32.dll", SetLastError = true, ThrowOnUnmappableChar = true, CharSet = CharSet.Auto)]
        public static extern bool GetSaveFileName([@In, @Out] OpenFileName ofn);
        public static bool GetSFN([@In, @Out] OpenFileName ofn)
        {
            return GetSaveFileName(ofn);//执行保存选中文件的操作
        }


        [DllImport("Comdlg32.dll", SetLastError = true, ThrowOnUnmappableChar = true, CharSet = CharSet.Auto)]
        public static extern bool GetOpenFileName([@In, @Out] OpenFileName ofn);
        public static bool GetOpenFileName1([@In, @Out] OpenFileName ofn)
        {
            return GetOpenFileName(ofn);
        }
    }


    #endregion
}
