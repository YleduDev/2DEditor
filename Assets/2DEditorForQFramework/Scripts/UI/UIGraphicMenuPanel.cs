//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QFramework.TDE
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    using UniRx;
    using global::TDE;
    using System.Runtime.InteropServices;
    using System.IO;
    //using System.Windows.Forms;
    public class UIGraphicMenuPanelData : QFramework.UIPanelData
    {
       // public TSceneData model;
    }
    
    public partial class UIGraphicMenuPanel : QFramework.UIPanel
    {
        public static  Vector2ReactiveProperty TitleImgLocalPos = new Vector2ReactiveProperty();
        public static BoolReactiveProperty TitleImgActive = new BoolReactiveProperty(false);
        public static ReactiveProperty<Sprite> TitleSprite = new ReactiveProperty<Sprite>();

        RectTransform rectGraphicView;
        
        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            
        }    
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as UIGraphicMenuPanelData ?? new UIGraphicMenuPanelData();
            rectGraphicView = UIGraphicsView.transform as RectTransform;

            UIGraphicControlContent.GenerateUIGrrphicsItemOnInit(UIGraphicItem,UIimg,UIWidgetImg, UIDirButton, rectGraphicView);
         
            //订阅titleImg相关属性
            TitleImgLocalPos.Subscribe(v2=> TitleImg.LocalPosition(v2));
            TitleImgActive.Subscribe(bo=> { if (bo) TitleImg.Show(); else TitleImg.Hide(); });
            TitleSprite.Subscribe(sprite => TitleImg.sprite = sprite);
            //更多按钮单击
            UILocalEditorButton.onClick.AddListener(()=> { UIMgr.OpenPanel<UIGraphicMenuScrollViewPanel>(new UIGraphicMenuScrollViewPanelData() { model= UIGraphicControlContent.GetPrimSet() }); });

#if UNITY_WEBGL
            UILoaclConfigButton.Hide();
            UILoaclConfigCompleteButton.Hide();
#else
            UILoaclConfigButton.onClick.AddListener(() => {
                UIGraphicControlContent.SetUIimgActiveForItem(true);
                UIGraphicControlContent.SetGruphicItemsDeleteBtnActive(true);
                UILoaclConfigCompleteButton.Show();
                UIGraphicListsImportButton.Show();
                UILoaclConfigButton.Hide(); });

            UILoaclConfigCompleteButton.onClick.AddListener(CompleteButtonEvent);

            UIGraphicListsImportButton.onClick.AddListener(()=> {
            PictureMgrForWindows.Instance.GetPatherForDir(FilePath.StreamingAssetsPath + Global.CustomCinfigGraphicsPathName,
                () => UIGraphicControlContent.UpdateCounstGraphicItem());
                CompleteButtonEvent();
            });
#endif
            UIGraphicMenu_InputField.onValueChanged.AddListener(UIGraphicControlContent.CheckShow);
        }   

        private void CompleteButtonEvent()
        {
            UIGraphicControlContent.SetUIimgActiveForItem(false);
            UIGraphicControlContent.SetGruphicItemsDeleteBtnActive(false);
            UILoaclConfigCompleteButton.Hide();
            UIGraphicListsImportButton.Hide();
            UILoaclConfigButton.Show();
        }
        protected override void OnOpen(QFramework.IUIData uiData)
        {

        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
        }
    }
}
